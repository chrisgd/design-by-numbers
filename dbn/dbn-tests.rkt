#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 84 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 35 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 119 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 136 17 17 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 34 119 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 119 34 119 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 178 178 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1           0 806 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 59
#"; a slightly more advanced test framework than check-expect"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 19 3 20 #"\"lang/dbn-lexer.rkt\""
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 19 3 21 #"\"lang/dbn-parser.rkt\""
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 19 3 18 #"\"lang/dbn-ast.rkt\""
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 19 3 14 #"\"dbn-eval.rkt\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 60
#"; test for the lexer things the students were required to do"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 23 #"student-dbn-lexer-tests"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"test-suite"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Student"
0 0 19 3 1 #" "
0 0 19 3 4 #"test"
0 0 19 3 1 #" "
0 0 19 3 5 #"cases"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"DBN"
0 0 19 3 7 #" lexer\""
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 36 #"; students only needed to test these"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Lexing"
0 0 19 3 7 #" Paper\""
0 0 25 3 2 #" ("
0 0 14 3 6 #"lexstr"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"Paper\""
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"token-PAPER"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Lexing"
0 0 19 3 7 #" PAPER\""
0 0 25 3 2 #" ("
0 0 14 3 6 #"lexstr"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"PAPER\""
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"token-PAPER"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Lexing"
0 0 19 3 5 #" Pen\""
0 0 25 3 2 #" ("
0 0 14 3 6 #"lexstr"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"Pen\""
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"token-PEN"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Lexing"
0 0 19 3 5 #" PEN\""
0 0 25 3 2 #" ("
0 0 14 3 6 #"lexstr"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"PEN\""
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"token-PEN"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Lexing"
0 0 19 3 6 #" Line\""
0 0 25 3 2 #" ("
0 0 14 3 6 #"lexstr"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"Line\""
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"token-LINE"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Lexing"
0 0 19 3 6 #" LINE\""
0 0 25 3 2 #" ("
0 0 14 3 6 #"lexstr"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"LINE\""
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"token-LINE"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Lexing"
0 0 19 3 5 #" Set\""
0 0 25 3 2 #" ("
0 0 14 3 6 #"lexstr"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"Set\""
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"token-SET"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Lexing"
0 0 19 3 5 #" SET\""
0 0 25 3 2 #" ("
0 0 14 3 6 #"lexstr"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"SET\""
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"token-SET"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 62
#"; test for the grammar things the students were required to do"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 24 #"student-dbn-parser-tests"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"test-suite"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Student"
0 0 19 3 1 #" "
0 0 19 3 4 #"test"
0 0 19 3 1 #" "
0 0 19 3 5 #"cases"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"DBN"
0 0 19 3 8 #" parser\""
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 36 #"; students only needed to test these"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Grammar"
0 0 19 3 1 #" "
0 0 19 3 4 #"test"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 7 #" Paper\""
0 0 25 3 2 #" ("
0 0 14 3 9 #"parse-str"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Paper"
0 0 19 3 7 #" 100\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 7 #"program"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"paper-expr"
0 0 25 3 2 #" ("
0 0 14 3 12 #"numeric-expr"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 2 #") "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Grammar"
0 0 19 3 1 #" "
0 0 19 3 4 #"test"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 5 #" Pen\""
0 0 25 3 2 #" ("
0 0 14 3 9 #"parse-str"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"Pen"
0 0 19 3 7 #" 100\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 7 #"program"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 8 #"pen-expr"
0 0 25 3 2 #" ("
0 0 14 3 12 #"numeric-expr"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Grammar"
0 0 19 3 1 #" "
0 0 19 3 4 #"test"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 6 #" Line\""
0 0 25 3 2 #" ("
0 0 14 3 9 #"parse-str"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"Line"
0 0 19 3 1 #" "
0 0 19 3 1 #"0"
0 0 19 3 1 #" "
0 0 19 3 1 #"0"
0 0 19 3 1 #" "
0 0 19 3 3 #"100"
0 0 19 3 7 #" 100\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 7 #"program"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"line-expr"
0 0 25 3 2 #" ("
0 0 14 3 12 #"numeric-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 12 #"numeric-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 12 #"numeric-expr"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 3 #") ("
0 0 14 3 12 #"numeric-expr"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Grammar"
0 0 19 3 1 #" "
0 0 19 3 4 #"test"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 5 #" Set\""
0 0 25 3 2 #" ("
0 0 14 3 9 #"parse-str"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"Set"
0 0 19 3 1 #" "
0 0 19 3 1 #"X"
0 0 19 3 2 #" ("
0 0 19 3 2 #"50"
0 0 19 3 1 #" "
0 0 19 3 1 #"*"
0 0 19 3 1 #" "
0 0 19 3 2 #"25"
0 0 19 3 4 #")\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 7 #"program"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 15 #"assignment-expr"
0 0 25 3 2 #" ("
0 0 14 3 8 #"var-expr"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 25 3 3 #") ("
0 0 14 3 9 #"mult-expr"
0 0 25 3 2 #" ("
0 0 14 3 12 #"numeric-expr"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 3 #") ("
0 0 14 3 12 #"numeric-expr"
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Grammar"
0 0 19 3 1 #" "
0 0 19 3 4 #"test"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 8 #" Repeat\""
0 0 25 3 2 #" ("
0 0 14 3 9 #"parse-str"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Repeat"
0 0 19 3 1 #" "
0 0 19 3 1 #"X"
0 0 19 3 1 #" "
0 0 19 3 1 #"0"
0 0 19 3 1 #" "
0 0 19 3 5 #"100\\n"
0 0 19 3 1 #"{"
0 0 19 3 7 #"\\nPrint"
0 0 19 3 1 #" "
0 0 19 3 3 #"X\\n"
0 0 19 3 4 #"}\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 7 #"program"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 11 #"repeat-expr"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 25 3 2 #" ("
0 0 14 3 12 #"numeric-expr"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 12 #"numeric-expr"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"print-expr"
0 0 25 3 2 #" ("
0 0 14 3 8 #"var-expr"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 25 3 7 #")))))))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"test-equal?"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Grammar"
0 0 19 3 1 #" "
0 0 19 3 4 #"test"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 3 #"var"
0 0 19 3 12 #" expression\""
0 0 25 3 2 #" ("
0 0 14 3 9 #"parse-str"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"Set"
0 0 19 3 1 #" "
0 0 19 3 1 #"A"
0 0 19 3 5 #" X\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 7 #"program"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 15 #"assignment-expr"
0 0 25 3 2 #" ("
0 0 14 3 8 #"var-expr"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 25 3 3 #") ("
0 0 14 3 8 #"var-expr"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 25 3 7 #")))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";; compare two bitmaps"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"bitmaps-equal?"
0 0 25 3 1 #" "
0 0 14 3 2 #"b1"
0 0 25 3 1 #" "
0 0 14 3 2 #"b2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 25 3 3 #" (["
0 0 14 3 2 #"w1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"b1"
0 0 25 3 1 #" "
0 0 14 3 9 #"get-width"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ["
0 0 14 3 2 #"h1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"b1"
0 0 25 3 1 #" "
0 0 14 3 10 #"get-height"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ["
0 0 14 3 2 #"w2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"b2"
0 0 25 3 1 #" "
0 0 14 3 9 #"get-width"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ["
0 0 14 3 2 #"h2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"b2"
0 0 25 3 1 #" "
0 0 14 3 10 #"get-height"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 17 3 66
#"; multiply the size by 4 because we have 1 byte for a, r, g, and b"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ["
0 0 14 3 7 #"pixels1"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-bytes"
0 0 25 3 2 #" ("
0 0 14 3 14 #"inexact->exact"
0 0 25 3 2 #" ("
0 0 14 3 5 #"round"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"b1"
0 0 25 3 1 #" "
0 0 14 3 17 #"get-backing-scale"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 2 #"w1"
0 0 25 3 1 #" "
0 0 14 3 2 #"h1"
0 0 25 3 2 #") "
0 0 22 3 1 #"4"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ["
0 0 14 3 7 #"pixels2"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-bytes"
0 0 25 3 2 #" ("
0 0 14 3 14 #"inexact->exact"
0 0 25 3 2 #" ("
0 0 14 3 5 #"round"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"b2"
0 0 25 3 1 #" "
0 0 14 3 17 #"get-backing-scale"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 2 #"w2"
0 0 25 3 1 #" "
0 0 14 3 2 #"h2"
0 0 25 3 2 #") "
0 0 22 3 1 #"4"
0 0 25 3 6 #"))))])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"w1"
0 0 25 3 1 #" "
0 0 14 3 2 #"w2"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 2 #"h1"
0 0 25 3 1 #" "
0 0 14 3 2 #"h2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 22 3 2 #"#f"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"b1"
0 0 25 3 1 #" "
0 0 14 3 15 #"get-argb-pixels"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 2 #"w1"
0 0 25 3 1 #" "
0 0 14 3 2 #"h1"
0 0 25 3 1 #" "
0 0 14 3 7 #"pixels1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 0 14 3 2 #"b2"
0 0 25 3 1 #" "
0 0 14 3 15 #"get-argb-pixels"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 2 #"w2"
0 0 25 3 1 #" "
0 0 14 3 2 #"h2"
0 0 25 3 1 #" "
0 0 14 3 7 #"pixels2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 7 #"pixels1"
0 0 25 3 1 #" "
0 0 14 3 7 #"pixels2"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 22 #"student-dbn-eval-tests"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"test-suite"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Student"
0 0 19 3 1 #" "
0 0 19 3 4 #"test"
0 0 19 3 1 #" "
0 0 19 3 5 #"cases"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 3 #"DBN"
0 0 19 3 11 #" evaluator\""
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 62
#"; students only need to really test these kinds of evaluations"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 101
(
 #"; okay, I have to admit, this is a pretty awesome way to test! I hav"
 #"e images in my test cases, sweet."
) 0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 14 3 10 #"test-check"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"Eval"
0 0 19 3 1 #" "
0 0 19 3 4 #"test"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 6 #" Line\""
0 0 25 3 1 #" "
0 0 14 3 14 #"bitmaps-equal?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-str"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Paper"
0 0 19 3 1 #" "
0 0 19 3 8 #"100\\nPen"
0 0 19 3 1 #" "
0 0 19 3 7 #"0\\nLine"
0 0 19 3 1 #" "
0 0 19 3 1 #"0"
0 0 19 3 1 #" "
0 0 19 3 1 #"0"
0 0 19 3 1 #" "
0 0 19 3 3 #"100"
0 0 19 3 1 #" "
0 0 19 3 10 #"100\\nValue"
0 0 19 3 12 #" <Bitmap>\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 2          15 22 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           2 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0d\0\0\0d\b"
 #"\6\0\0\0p\342\225T\0\0\2\25IDATx\234\355\324Yn\3030\20"
 #"\4\321R\356\177g\345#\210\35\307\262"
 #"\255\205\344\f\311\252\0234\360\200^\200"
 #"\25K\323W\364\0\273\267\256\253 YZ\327\225eY\4\311\320/\6xY\341"
 #"\375\305\0AB\373\217\1\202\204\265\205"
 #"\1\202\204\364\n\3\4i\336;\f\20\244i\2370@\220f\355\301\0A\232\264"
 #"\27\3\4\251\336\21\f\20\244jG1@\220j\235\301\0A\252t\26\3\4)"
 #"\336\25\f\20\244hW1@\220b\225\300\0A\212T\n\3\4\271\\I\f\20"
 #"\344R\2451@\220\323\325\300\0ANU\v\3\49\\M\f\20\344P\2651"
 #"@\220\335\265\300\0Av\325\n\3\4\371XK\f\20\344m\2551@\220\227E"
 #"`\200 \233Ea\200 OEb\200 \17Ec\200 \2672`\200 @\36"
 #"\f\20$\25\6L\16\222\r\3&\6\311\210\1\223\202d\305\200\tA2c\300"
 #"d \3311`\"\220\0360`\22\220^0`\2\220\2360`p\220\3360`"
 #"`\220\0361`P\220^1`@\220\2361`0\220\3361` \220\0210`"
 #"\20\220Q0`\0\220\2210\240s\220\3210\240c\220\0211\240S\220Q1\240"
 #"C\220\2211\2403\220\3211\240#\220\0310\240\23\220Y0\240\3\220\2310 "
 #"9\310l\30\220\30dF\fH\n2+\6$\4\231\31\3\222\201\314\216\1\211"
 #"@\304\370)\5\210\30\367\302A\304x,\24D\214\347\302@\304\330.\4D\214"
 #"\3275\a\21\343}MA\304\370\\3\0201\366\325\4D\214\375U\a\21\343X"
 #"UA\3048^5\0201\316U\5D\214\363\25\a\21\343Z"
 #"EA\304\270^1\0201\312T\4D\214r]\6\21\243l\227"
) 90
(
 #"@\304(\337i\0201\352t\nD\214z\35\6\21\243n\207@\304\250\337n\20"
 #"1\332\264\vD\214v}\4\21\243moA\304h\337K\0201b\332\4\21#"
 #"\256'\0201b{\0\21#\276\e\210\309\372\00212\365\r"
 #"\31\35*\323\6;1\255\0\0\0\0IEND\256B`\202"
) 0 0 25 3 1 #" "
0 0 14 3 10 #"get-bitmap"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 14 3 10 #"test-check"
0 0 25 3 1 #" "
0 0 19 3 35 #"\"Eval test for Variable Assignment\""
0 0 25 3 1 #" "
0 0 14 3 14 #"bitmaps-equal?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"eval-str"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"Paper 100"
0 0 19 3 1 #"\\"
0 0 19 3 6 #"nPen 0"
0 0 19 3 1 #"\\"
0 0 19 3 9 #"nSet X 50"
0 0 19 3 16 #"\\nSet [X X] 0\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"send"
0 0 25 3 1 #" "
0 2          13 22 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           1 327
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0e\0\0\0e\b"
 #"\6\0\0\0T|-\317\0\0\1\16IDATx\234\355\334Q\t\300@\f"
 #"\5\301\\\375{\276\n\250\200.aFA`\311\357;3s\207\224\347\357\3\370"
 #"\22%H\224 Q\202D\t\22%H\224 Q\202D\t\22%H\224 Q\202"
 #"D\t\22%H\224 Q\202D\t\22%H\224 Q\202D\t\22%H\224 "
 #"Q\202D\t\22%H\224 Q\202D\t\22%H\224 Q\202D\t\22%H"
 #"\224 Q\202D\t\22%H\224 Q\202D\t\22%H\224 Q\202D\t\22"
 #"%H\224 Q\202D\tZ\23\345\336=\3\177g\314\25\346\254\371\224MD\t"
 #"\22%H\224 Q\202D\t\22%H\224 Q\202D\t\22%H\224 Q\202"
 #"D\t\22%H\224 Q\202D\t\22%H\224 Q\202D\t\22%H\224 "
 #"Q\202D\t\22%H\224 Q\202D\t\22%H\224 Q\202D\t\22%H"
 #"\224 Q\202D\t\22%H\224 Q\202D\t\22%H\224 Q\202D\t\22"
 #"%H\224 Q\202^&\26\5\304\1\2k\254\0\0\0\0IEND\256B`\202"
) 0 0 25 3 1 #" "
0 0 14 3 10 #"get-bitmap"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"   ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 16 #"rackunit/text-ui"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 5 #"begin"
0 0 25 3 2 #" ("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 9 #"Executing"
0 0 19 3 1 #" "
0 0 19 3 14 #"lexer tests: \""
0 0 25 3 4 #" ) ("
0 0 14 3 4 #"void"
0 0 25 3 2 #" ("
0 0 14 3 9 #"run-tests"
0 0 25 3 1 #" "
0 0 14 3 23 #"student-dbn-lexer-tests"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 5 #"begin"
0 0 25 3 2 #" ("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 9 #"Executing"
0 0 19 3 1 #" "
0 0 19 3 15 #"parser tests: \""
0 0 25 3 3 #") ("
0 0 14 3 4 #"void"
0 0 25 3 2 #" ("
0 0 14 3 9 #"run-tests"
0 0 25 3 1 #" "
0 0 14 3 24 #"student-dbn-parser-tests"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 5 #"begin"
0 0 25 3 2 #" ("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 9 #"Executing"
0 0 19 3 1 #" "
0 0 19 3 18 #"evaluator tests: \""
0 0 25 3 3 #") ("
0 0 14 3 4 #"void"
0 0 25 3 2 #" ("
0 0 14 3 9 #"run-tests"
0 0 25 3 1 #" "
0 0 14 3 22 #"student-dbn-eval-tests"
0 0 25 3 3 #")))"
0           0
